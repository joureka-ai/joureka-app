"""ORM model for a TopicModel generated by BERTopic in the system"""

from sqlalchemy import Column, Integer, String, ForeignKey, Index, Boolean
from sqlalchemy.orm import relationship, deferred
from sqlalchemy_utils import TSVectorType

from app.db.base_class import Base

from .topic_word import TopicWord

class TopicModel(Base):
    """ORM model for a TopicModel"""
    
    __table_name__ = "topicmodel"

    id = Column(Integer, primary_key=True, index=True)
    # An non-key identifier for ensuring to not always train new models
    model_name = Column(String, nullable=False)
    x = Column(Integer, nullable=False)
    y = Column(Integer, nullable=False)
    label = Column(String, nullable=False)
    size = Column(Integer, nullable=False)
    fk_project = Column(Integer, ForeignKey("project.id"))

    words = relationship(TopicWord, cascade="all, delete-orphan", order_by=TopicWord.frequency)

TopicWord.document = relationship(TopicModel, back_populates="words")
